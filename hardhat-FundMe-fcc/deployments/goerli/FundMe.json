{
  "address": "0xD662c47b2b67623Ff3e73bD544a02E2638fADFAC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0c470484645e16b21ded3d6f132a330518b9d17c3fa39a0ad6ee8e845c20c851",
  "receipt": {
    "to": null,
    "from": "0xDe0D7160185105865AB41fe37832aD09e55a810e",
    "contractAddress": "0xD662c47b2b67623Ff3e73bD544a02E2638fADFAC",
    "transactionIndex": 78,
    "gasUsed": "977549",
    "logsBloom": "0x
    "blockHash": "0x7e04cf0791a0504637a6361b5e49e713cac378188bc7a6865eaa1616440b716f",
    "transactionHash": "0x0c470484645e16b21ded3d6f132a330518b9d17c3fa39a0ad6ee8e845c20c851",
    "logs": [],
    "blockNumber": 8341096,
    "cumulativeGasUsed": "20719979",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "8cef53b58de34ce710e138f263cc18ad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Sammy Wise\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feed as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n// Interface, Libraries, Contracts\\n\\n/** @title A contract for crowd funding\\n * @author Sammy Wise\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feed as our library\\n */\\n\\ncontract FundMe {\\n    //Type Declarations\\n\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feed as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to send more ETH\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array\\n        s_funders = new address[](0);\\n        // actually withdraw the funds\\n\\n        //transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failes\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n}\\n\",\"keccak256\":\"0x5b0fa0a5f700eada27fd6a55ce0c68195dccbef886c6c7cf70809c47d18deb96\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    /** Libraries can't have any state variables and ther can't\\n    send ether and all the functions in a library are going to be\\n    internal\\n  \\n    **/\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x9b0d58f4f56fef2e13492097ee280dfc33140659408b737c7d02c16d57ae0e89\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b18800006000553480156200001e57600080fd5b50604051620011753803806200117583398181016040528101906200004491906200012a565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b608051610fe86200018d60003960008181610320015281816105a60152818161079d01526108350152610fe86000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e0565b6040516100ba9190610a4a565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610aa8565b610306565b6040516100f79190610aee565b60405180910390f35b34801561010c57600080fd5b5061011561031e565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b35565b61055f565b60405161014b9190610b71565b60405180910390f35b34801561016057600080fd5b5061016961059e565b6040516101769190610aee565b60405180910390f35b6101876101be565b005b6101916105a4565b005b34801561019f57600080fd5b506101a8610833565b6040516101b59190610b71565b60405180910390f35b6000546101f6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085790919063ffffffff16565b1015610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e90610be9565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044f576000600182815481106103c9576103c8610c09565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044790610c67565b9150506103a6565b50600067ffffffffffffffff81111561046b5761046a610caf565b5b6040519080825280602002602001820160405280156104995781602001602082028036833780820191505090505b50600190805190602001906104af929190610924565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d690610d0f565b60006040518083038185875af1925050503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b505090508061055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610d70565b60405180910390fd5b50565b6001818154811061056f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610629576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610663575b5050505050905060005b81518110156107385760008282815181106106d5576106d4610c09565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073090610c67565b9150506106b7565b50600067ffffffffffffffff81111561075457610753610caf565b5b6040519080825280602002602001820160405280156107825781602001602082028036833780820191505090505b5060019080519060200190610798929190610924565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107df90610d0f565b60006040518083038185875af1925050503d806000811461081c576040519150601f19603f3d011682016040523d82523d6000602084013e610821565b606091505b505090508061082f57600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061086383610893565b90506000670de0b6b3a7640000858361087c9190610d90565b6108869190610e01565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109059190610ebf565b5050509150506402540be4008161091c9190610f3a565b915050919050565b82805482825590600052602060002090810192821561099d579160200282015b8281111561099c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610944565b5b5090506109aa91906109ae565b5090565b5b808211156109c75760008160009055506001016109af565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a10610a0b610a06846109cb565b6109eb565b6109cb565b9050919050565b6000610a22826109f5565b9050919050565b6000610a3482610a17565b9050919050565b610a4481610a29565b82525050565b6000602082019050610a5f6000830184610a3b565b92915050565b600080fd5b6000610a75826109cb565b9050919050565b610a8581610a6a565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a65565b5b6000610acc84828501610a93565b91505092915050565b6000819050919050565b610ae881610ad5565b82525050565b6000602082019050610b036000830184610adf565b92915050565b610b1281610ad5565b8114610b1d57600080fd5b50565b600081359050610b2f81610b09565b92915050565b600060208284031215610b4b57610b4a610a65565b5b6000610b5984828501610b20565b91505092915050565b610b6b81610a6a565b82525050565b6000602082019050610b866000830184610b62565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652045544800000000000000600082015250565b6000610bd3601983610b8c565b9150610bde82610b9d565b602082019050919050565b60006020820190508181036000830152610c0281610bc6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7282610ad5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ca457610ca3610c38565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cf9600083610cde565b9150610d0482610ce9565b600082019050919050565b6000610d1a82610cec565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d5a600b83610b8c565b9150610d6582610d24565b602082019050919050565b60006020820190508181036000830152610d8981610d4d565b9050919050565b6000610d9b82610ad5565b9150610da683610ad5565b9250828202610db481610ad5565b91508282048414831517610dcb57610dca610c38565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0c82610ad5565b9150610e1783610ad5565b925082610e2757610e26610dd2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5181610e32565b8114610e5c57600080fd5b50565b600081519050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b600081519050610eb981610b09565b92915050565b600080600080600060a08688031215610edb57610eda610a65565b5b6000610ee988828901610e5f565b9550506020610efa88828901610e95565b9450506040610f0b88828901610eaa565b9350506060610f1c88828901610eaa565b9250506080610f2d88828901610e5f565b9150509295509295909350565b6000610f4582610e74565b9150610f5083610e74565b9250828202610f5e81610e74565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f9657610f95610c38565b5b8282058414831517610fab57610faa610c38565b5b509291505056fea2646970667358221220114cb78331ac414a3d1652b1cea69f4e18010e656e4bb8fe8d0fc56bba22797f64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e0565b6040516100ba9190610a4a565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610aa8565b610306565b6040516100f79190610aee565b60405180910390f35b34801561010c57600080fd5b5061011561031e565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b35565b61055f565b60405161014b9190610b71565b60405180910390f35b34801561016057600080fd5b5061016961059e565b6040516101769190610aee565b60405180910390f35b6101876101be565b005b6101916105a4565b005b34801561019f57600080fd5b506101a8610833565b6040516101b59190610b71565b60405180910390f35b6000546101f6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085790919063ffffffff16565b1015610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e90610be9565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044f576000600182815481106103c9576103c8610c09565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044790610c67565b9150506103a6565b50600067ffffffffffffffff81111561046b5761046a610caf565b5b6040519080825280602002602001820160405280156104995781602001602082028036833780820191505090505b50600190805190602001906104af929190610924565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d690610d0f565b60006040518083038185875af1925050503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b505090508061055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610d70565b60405180910390fd5b50565b6001818154811061056f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610629576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610663575b5050505050905060005b81518110156107385760008282815181106106d5576106d4610c09565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073090610c67565b9150506106b7565b50600067ffffffffffffffff81111561075457610753610caf565b5b6040519080825280602002602001820160405280156107825781602001602082028036833780820191505090505b5060019080519060200190610798929190610924565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107df90610d0f565b60006040518083038185875af1925050503d806000811461081c576040519150601f19603f3d011682016040523d82523d6000602084013e610821565b606091505b505090508061082f57600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061086383610893565b90506000670de0b6b3a7640000858361087c9190610d90565b6108869190610e01565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109059190610ebf565b5050509150506402540be4008161091c9190610f3a565b915050919050565b82805482825590600052602060002090810192821561099d579160200282015b8281111561099c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610944565b5b5090506109aa91906109ae565b5090565b5b808211156109c75760008160009055506001016109af565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a10610a0b610a06846109cb565b6109eb565b6109cb565b9050919050565b6000610a22826109f5565b9050919050565b6000610a3482610a17565b9050919050565b610a4481610a29565b82525050565b6000602082019050610a5f6000830184610a3b565b92915050565b600080fd5b6000610a75826109cb565b9050919050565b610a8581610a6a565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a65565b5b6000610acc84828501610a93565b91505092915050565b6000819050919050565b610ae881610ad5565b82525050565b6000602082019050610b036000830184610adf565b92915050565b610b1281610ad5565b8114610b1d57600080fd5b50565b600081359050610b2f81610b09565b92915050565b600060208284031215610b4b57610b4a610a65565b5b6000610b5984828501610b20565b91505092915050565b610b6b81610a6a565b82525050565b6000602082019050610b866000830184610b62565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652045544800000000000000600082015250565b6000610bd3601983610b8c565b9150610bde82610b9d565b602082019050919050565b60006020820190508181036000830152610c0281610bc6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7282610ad5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ca457610ca3610c38565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cf9600083610cde565b9150610d0482610ce9565b600082019050919050565b6000610d1a82610cec565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d5a600b83610b8c565b9150610d6582610d24565b602082019050919050565b60006020820190508181036000830152610d8981610d4d565b9050919050565b6000610d9b82610ad5565b9150610da683610ad5565b9250828202610db481610ad5565b91508282048414831517610dcb57610dca610c38565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0c82610ad5565b9150610e1783610ad5565b925082610e2757610e26610dd2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5181610e32565b8114610e5c57600080fd5b50565b600081519050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b600081519050610eb981610b09565b92915050565b600080600080600060a08688031215610edb57610eda610a65565b5b6000610ee988828901610e5f565b9550506020610efa88828901610e95565b9450506040610f0b88828901610eaa565b9350506060610f1c88828901610eaa565b9250506080610f2d88828901610e5f565b9150509295509295909350565b6000610f4582610e74565b9150610f5083610e74565b9250828202610f5e81610e74565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f9657610f95610c38565b5b8282058414831517610fab57610faa610c38565b5b509291505056fea2646970667358221220114cb78331ac414a3d1652b1cea69f4e18010e656e4bb8fe8d0fc56bba22797f64736f6c63430008110033",
  "devdoc": {
    "author": "Sammy Wise",
    "details": "This implements price feed as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feed as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}