{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1a60fc4df401b4bd2e616f87c345b522f8e03a4dfaecfbd2faa163d3ee6603f1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "832231",
    "logsBloom": "0x
    "blockHash": "0x9990ee66f09b67dc574fac7b85a5101f2d072eb1cef5409af5250bf9ce460362",
    "transactionHash": "0x1a60fc4df401b4bd2e616f87c345b522f8e03a4dfaecfbd2faa163d3ee6603f1",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "832231",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "35ba3611f682a12d22b3df6f79880317",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// 817,755\\n// 837,297\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn;t send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array\\n        funders = new address[](0);\\n        // actually withdraw the funds\\n\\n        //transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failes\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x5d49bbb0ec31c1a816c98c69e9e920ef41c4087e9a2e503c68a7cb723f1b6cc4\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    /** Libraries can't have any state variables and ther can't\\n    send ether and all the functions in a library are going to be\\n    internal\\n  \\n    **/\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x9b0d58f4f56fef2e13492097ee280dfc33140659408b737c7d02c16d57ae0e89\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610eb0380380610eb0833981810160405281019061003f919061011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b608051610d4461016c600039600081816102cd01526105520152610d446000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102cb565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061078a565b61050c565b6040516100d891906107d0565b60405180910390f35b3480156100ed57600080fd5b506100f6610524565b60405161010391906107d0565b60405180910390f35b34801561011857600080fd5b5061012161052a565b60405161012e919061084a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610550565b6040516101639190610874565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108bb565b610574565b6040516101a09190610874565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b390919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610945565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610350576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103fc5760006001828154811061037657610375610965565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f4906109c3565b915050610353565b50600067ffffffffffffffff81111561041857610417610a0b565b5b6040519080825280602002602001820160405280156104465781602001602082028036833780820191505090505b506001908051906020019061045c929190610680565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048390610a6b565b60006040518083038185875af1925050503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b5050905080610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610acc565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bf836105ef565b90506000670de0b6b3a764000085836105d89190610aec565b6105e29190610b5d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610c1b565b5050509150506402540be400816106789190610c96565b915050919050565b8280548282559060005260206000209081019282156106f9579160200282015b828111156106f85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a0565b5b509050610706919061070a565b5090565b5b8082111561072357600081600090555060010161070b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107578261072c565b9050919050565b6107678161074c565b811461077257600080fd5b50565b6000813590506107848161075e565b92915050565b6000602082840312156107a05761079f610727565b5b60006107ae84828501610775565b91505092915050565b6000819050919050565b6107ca816107b7565b82525050565b60006020820190506107e560008301846107c1565b92915050565b6000819050919050565b600061081061080b6108068461072c565b6107eb565b61072c565b9050919050565b6000610822826107f5565b9050919050565b600061083482610817565b9050919050565b61084481610829565b82525050565b600060208201905061085f600083018461083b565b92915050565b61086e8161074c565b82525050565b60006020820190506108896000830184610865565b92915050565b610898816107b7565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b6000602082840312156108d1576108d0610727565b5b60006108df848285016108a6565b91505092915050565b600082825260208201905092915050565b7f4469646e3b742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061092f6012836108e8565b915061093a826108f9565b602082019050919050565b6000602082019050818103600083015261095e81610922565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce826107b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a00576109ff610994565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a55600083610a3a565b9150610a6082610a45565b600082019050919050565b6000610a7682610a48565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab6600b836108e8565b9150610ac182610a80565b602082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b6000610af7826107b7565b9150610b02836107b7565b9250828202610b10816107b7565b91508282048414831517610b2757610b26610994565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b68826107b7565b9150610b73836107b7565b925082610b8357610b82610b2e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bad81610b8e565b8114610bb857600080fd5b50565b600081519050610bca81610ba4565b92915050565b6000819050919050565b610be381610bd0565b8114610bee57600080fd5b50565b600081519050610c0081610bda565b92915050565b600081519050610c158161088f565b92915050565b600080600080600060a08688031215610c3757610c36610727565b5b6000610c4588828901610bbb565b9550506020610c5688828901610bf1565b9450506040610c6788828901610c06565b9350506060610c7888828901610c06565b9250506080610c8988828901610bbb565b9150509295509295909350565b6000610ca182610bd0565b9150610cac83610bd0565b9250828202610cba81610bd0565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf257610cf1610994565b5b8282058414831517610d0757610d06610994565b5b509291505056fea26469706673582212201d71432733d1874595e8a9afddb3444cd29589fd19fea59f6190171122b3fc2264736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102cb565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061078a565b61050c565b6040516100d891906107d0565b60405180910390f35b3480156100ed57600080fd5b506100f6610524565b60405161010391906107d0565b60405180910390f35b34801561011857600080fd5b5061012161052a565b60405161012e919061084a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610550565b6040516101639190610874565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108bb565b610574565b6040516101a09190610874565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b390919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610945565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610350576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103fc5760006001828154811061037657610375610965565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f4906109c3565b915050610353565b50600067ffffffffffffffff81111561041857610417610a0b565b5b6040519080825280602002602001820160405280156104465781602001602082028036833780820191505090505b506001908051906020019061045c929190610680565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048390610a6b565b60006040518083038185875af1925050503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b5050905080610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610acc565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bf836105ef565b90506000670de0b6b3a764000085836105d89190610aec565b6105e29190610b5d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610c1b565b5050509150506402540be400816106789190610c96565b915050919050565b8280548282559060005260206000209081019282156106f9579160200282015b828111156106f85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a0565b5b509050610706919061070a565b5090565b5b8082111561072357600081600090555060010161070b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107578261072c565b9050919050565b6107678161074c565b811461077257600080fd5b50565b6000813590506107848161075e565b92915050565b6000602082840312156107a05761079f610727565b5b60006107ae84828501610775565b91505092915050565b6000819050919050565b6107ca816107b7565b82525050565b60006020820190506107e560008301846107c1565b92915050565b6000819050919050565b600061081061080b6108068461072c565b6107eb565b61072c565b9050919050565b6000610822826107f5565b9050919050565b600061083482610817565b9050919050565b61084481610829565b82525050565b600060208201905061085f600083018461083b565b92915050565b61086e8161074c565b82525050565b60006020820190506108896000830184610865565b92915050565b610898816107b7565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b6000602082840312156108d1576108d0610727565b5b60006108df848285016108a6565b91505092915050565b600082825260208201905092915050565b7f4469646e3b742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061092f6012836108e8565b915061093a826108f9565b602082019050919050565b6000602082019050818103600083015261095e81610922565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce826107b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a00576109ff610994565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a55600083610a3a565b9150610a6082610a45565b600082019050919050565b6000610a7682610a48565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab6600b836108e8565b9150610ac182610a80565b602082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b6000610af7826107b7565b9150610b02836107b7565b9250828202610b10816107b7565b91508282048414831517610b2757610b26610994565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b68826107b7565b9150610b73836107b7565b925082610b8357610b82610b2e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bad81610b8e565b8114610bb857600080fd5b50565b600081519050610bca81610ba4565b92915050565b6000819050919050565b610be381610bd0565b8114610bee57600080fd5b50565b600081519050610c0081610bda565b92915050565b600081519050610c158161088f565b92915050565b600080600080600060a08688031215610c3757610c36610727565b5b6000610c4588828901610bbb565b9550506020610c5688828901610bf1565b9450506040610c6788828901610c06565b9350506060610c7888828901610c06565b9250506080610c8988828901610bbb565b9150509295509295909350565b6000610ca182610bd0565b9150610cac83610bd0565b9250828202610cba81610bd0565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf257610cf1610994565b5b8282058414831517610d0757610d06610994565b5b509291505056fea26469706673582212201d71432733d1874595e8a9afddb3444cd29589fd19fea59f6190171122b3fc2264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}